{"ast":null,"code":"var _jsxFileName = \"/Users/ashikurrahman/Desktop/01-starting-setup/src/components/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let ExpensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is no item this selected year.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && ExpensesContent, filteredExpenses.length > 0 && filteredExpenses.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/ashikurrahman/Desktop/01-starting-setup/src/components/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","Expenses","items","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","filter","expense","date","getFullYear","toString","ExpensesContent","length","map","item","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMO,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,MAAN,CAAcC,OAAD,IAAa;AACjD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIU,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEV,YADZ;AAEE,MAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGE,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,IAAiCD,eALpC,EAMGN,gBAAgB,CAACO,MAAjB,GAA0B,CAA1B,IACCP,gBAAgB,CAACQ,GAAjB,CAAsBC,IAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,IAAI,CAACC,KAFd;AAGE,MAAA,MAAM,EAAED,IAAI,CAACE,MAHf;AAIE,MAAA,IAAI,EAAEF,IAAI,CAACN;AAJb,OACOM,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,YADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/BD;;GAAMlB,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\nconst Expenses = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let ExpensesContent = <p>There is no item this selected year.</p>;\n\n  return (\n    <div className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      {filteredExpenses.length === 0 && ExpensesContent}\n      {filteredExpenses.length > 0 &&\n        filteredExpenses.map((item) => (\n          <ExpenseItem\n            key={item.id}\n            title={item.title}\n            amount={item.amount}\n            date={item.date}\n          />\n        ))}\n\n      {}\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}