{"version":3,"sources":["components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesFilter.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","date","month","toLocaleString","day","year","getFullYear","className","ExpenseItem","amount","title","ExpensesFilter","onChangeFilter","selected","console","log","onChange","event","target","value","Expenses","items","useState","filteredYear","setFilteredYear","filteredExpenses","filter","expense","toString","ExpensesContent","selectedYear","length","map","item","id","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","htmlFor","type","min","step","max","onClick","NewExpenses","onAddExpense","isEditing","setIsEditing","enterdeExpenseData","Math","random","DUMMY_DATA","App","expenses","setExpenses","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.639f616e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpenseDate.css\";\nconst ExpenseDate = ({ date }) => {\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\"> {month}</div>\n      <div className=\"expense-date__year \">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = ({ amount, date, title }) => {\n  return (\n    <div className=\"expense-item \">\n      <ExpenseDate date={date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">$ {amount}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\n  console.log(selected);\n  const dropDonChangeHandler = (event) => {\n    onChangeFilter(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={dropDonChangeHandler} value={selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\nconst Expenses = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let ExpensesContent = <p>There is no item this selected year.</p>;\n\n  return (\n    <div className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      {filteredExpenses.length === 0 && ExpensesContent}\n      {filteredExpenses.length > 0 &&\n        filteredExpenses.map((item) => (\n          <ExpenseItem\n            key={item.id}\n            title={item.title}\n            amount={item.amount}\n            date={item.date}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput((prevState) => {\n    //   console.log(prevState);\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: event.target.value };\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      date: new Date(enteredDate),\n      amount: enteredAmount,\n    };\n    onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredDate(\"\");\n    setEnteredAmount(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpenses = ({ onAddExpense }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = (enterdeExpenseData) => {\n    const expenseData = {\n      ...enterdeExpenseData,\n      id: Math.random().toString(),\n    };\n    onAddExpense(expenseData);\n  };\n  const expenseAddHandler = () => {\n    setIsEditing(true);\n  };\n  const cancelHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={expenseAddHandler}>Add New expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={cancelHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpenses;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses\";\n\nimport NewExpenses from \"./components/NewExpense/NewExpenses\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prev) => {\n      return [expense, ...prev];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler} />\n\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}